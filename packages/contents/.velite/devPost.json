[
  {
    "id": "bcca9b66-e5bc-449d-a8fc-6132a198ce96",
    "slug": "articles/dev/posts/dev-post",
    "title": "Common copmponents compilation",
    "createdAt": "2024-08-02T00:00:00.000Z",
    "cover": "/assets/images/books/48-laws-of-power-cover.png",
    "description": "My Favorite MDX Components and How They Look!",
    "published": true,
    "hashTags": [
      "dev",
      "short",
      "js"
    ],
    "type": "POST",
    "body": "const{Fragment:e,jsx:n,jsxs:r}=arguments[0];function _createMdxContent(c){const o={code:\"code\",h2:\"h2\",h3:\"h3\",h4:\"h4\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...c.components},{CodeBlockTabs:a}=o;return a||function(e,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+e+\"` to be defined: you likely forgot to import, pass, or provide it.\")}(\"CodeBlockTabs\",!0),r(e,{children:[r(o.h2,{children:[\"ðŸ”¸ Part 1: \",n(o.code,{children:\"Set\"}),\" - The Unique Value Hero\"]}),\"\\n\",n(o.p,{children:\"Believe it or not, this is my first MacBook bought with my own money. I got my last one for free from Apple Academy ðŸ¤£.\"}),\"\\n\",n(o.p,{children:\"Though I can't say it isn't expensive, I feel this purchase is well justified since it has brought me thousands of percent in returns as it supports my work.\"}),\"\\n\",n(o.p,{children:\"This one is a 14\\\" MacBook Pro M3 Pro, with 36GB RAM and 1TB storage. You can never go wrong with more RAM; I don't regret spending extra hundreds for just the extra RAM. I don't want to see the 'out of application memory' popup\"}),\"\\n\",r(o.h3,{children:[\"What is a \",n(o.code,{children:\"Set\"}),\"?\"]}),\"\\n\",r(o.ul,{children:[\"\\n\",r(o.li,{children:[\"A \",n(o.code,{children:\"Set\"}),\" is a collection of \",n(o.strong,{children:\"unique values\"}),\" (no duplicates).\"]}),\"\\n\",r(o.li,{children:[\"Maintains the \",n(o.strong,{children:\"insertion order\"}),\".\"]}),\"\\n\",r(o.li,{children:[\"Values can be \",n(o.strong,{children:\"any type\"}),\": strings, numbers, objects, etc.\"]}),\"\\n\"]}),\"\\n\",n(o.h3,{children:\"Basic Example\"}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:\"const mySet = new Set()\\r\\nmySet.add(1)\\r\\nmySet.add(2)\\r\\nmySet.add(2) // Wonâ€™t be added again\\r\\nconsole.log(mySet) // Set(2) { 1, 2 }\\n\"})}),\"\\n\",r(o.h3,{children:[\"ðŸ”¥ Advanced Use Cases for \",n(o.code,{children:\"Set\"})]}),\"\\n\",n(o.h4,{children:\"1.1. Remove duplicates from an array\"}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:\"const arr = [1, 2, 2, 3, 4, 4, 5]\\r\\nconst uniqueArr = [...new Set(arr)]\\r\\nconsole.log(uniqueArr) // [1, 2, 3, 4, 5]\\n\"})}),\"\\n\",n(o.h4,{children:\"1.2. Check for duplicates\"}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:\"const hasDuplicates = arr.length !== new Set(arr).size\\r\\nconsole.log(hasDuplicates) // true\\n\"})}),\"\\n\",n(o.h4,{children:\"1.3. Use Set for managing tags (case-insensitive)\"}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:\"const tags = new Set()\\r\\n\\r\\nfunction addTag(tag) {\\r\\n\\ttags.add(tag.trim().toLowerCase())\\r\\n}\\r\\n\\r\\naddTag('Design')\\r\\naddTag('design') // Wonâ€™t add again\\r\\naddTag('Marketing')\\r\\n\\r\\nconsole.log(tags) // Set(2) { 'design', 'marketing' }\\n\"})}),\"\\n\",n(o.hr,{}),\"\\n\",r(o.h2,{children:[\"ðŸ”¸ Part 2: \",n(o.code,{children:\"Map\"}),\" - The Key-Value Power Tool\"]}),\"\\n\",r(o.h3,{children:[\"What is a \",n(o.code,{children:\"Map\"}),\"?\"]}),\"\\n\",r(o.ul,{children:[\"\\n\",r(o.li,{children:[\"A \",n(o.code,{children:\"Map\"}),\" holds \",n(o.strong,{children:\"key-value pairs\"}),\", just like an \",n(o.code,{children:\"Object\"}),\".\"]}),\"\\n\",r(o.li,{children:[\"Keys can be \",n(o.strong,{children:\"any type\"}),\", even objects or functions.\"]}),\"\\n\",r(o.li,{children:[\"Maintains the \",n(o.strong,{children:\"insertion order\"}),\".\"]}),\"\\n\",r(o.li,{children:[\"Built-in methods: \",n(o.code,{children:\"set()\"}),\", \",n(o.code,{children:\"get()\"}),\", \",n(o.code,{children:\"has()\"}),\", \",n(o.code,{children:\"delete()\"}),\", etc.\"]}),\"\\n\"]}),\"\\n\",n(o.h3,{children:\"Basic Example\"}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:\"const myMap = new Map()\\r\\nmyMap.set('name', 'John')\\r\\nmyMap.set(123, 'a number')\\r\\nmyMap.set({ id: 1 }, 'an object')\\r\\n\\r\\nconsole.log(myMap.get('name')) // John\\r\\nconsole.log(myMap.size) // 3\\n\"})}),\"\\n\",r(o.h3,{children:[\"ðŸ”¥ Advanced Use Cases for \",n(o.code,{children:\"Map\"})]}),\"\\n\",n(o.h4,{children:\"2.1. Use objects as keys\"}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:\"const user1 = { id: 1 }\\r\\nconst user2 = { id: 2 }\\r\\n\\r\\nconst roles = new Map()\\r\\nroles.set(user1, 'admin')\\r\\nroles.set(user2, 'editor')\\r\\n\\r\\nconsole.log(roles.get(user1)) // 'admin'\\n\"})}),\"\\n\",n(o.h4,{children:\"2.2. Count item occurrences\"}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:\"const fruits = ['apple', 'banana', 'apple', 'orange', 'banana', 'apple']\\r\\nconst countMap = new Map()\\r\\n\\r\\nfor (const fruit of fruits) {\\r\\n\\tcountMap.set(fruit, (countMap.get(fruit) || 0) + 1)\\r\\n}\\r\\nconsole.log(countMap)\\r\\n\\r\\n// Map(3) { 'apple' => 3, 'banana' => 2, 'orange' => 1 }\\n\"})}),\"\\n\",r(o.h4,{children:[\"2.3. Implement caching with \",n(o.code,{children:\"Map\"})]}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:'const cache = new Map()\\r\\n\\r\\nfunction fetchUser(id) {\\r\\n\\tif (cache.has(id)) {\\r\\n\\t\\tconsole.log(\\'âš¡ From cache\\')\\r\\n\\t\\treturn cache.get(id)\\r\\n\\t}\\r\\n\\tconst user = { id, name: `User ${id}` }\\r\\n\\tcache.set(id, user)\\r\\n\\treturn user\\r\\n}\\r\\n\\r\\nconsole.log(fetchUser(1)) // Fetch\\r\\nconsole.log(fetchUser(1)) // From cache\\r\\n\\r\\n// { \"id\": 1,\"name\": \"User 1\" }\\r\\n// âš¡ From cache\\r\\n// { \"id\": 1,\"name\": \"User 1\" }\\n'})}),\"\\n\",n(o.hr,{}),\"\\n\",r(o.h2,{children:[\"Combine \",n(o.code,{children:\"Map\"}),\" + \",n(o.code,{children:\"Set\"}),\": Real-Life Grouping\"]}),\"\\n\",n(o.h3,{children:\"Group users by role, with unique names\"}),\"\\n\",n(o.pre,{children:n(o.code,{className:\"language-js\",children:\"const users = [\\r\\n\\t{ name: 'Alice', role: 'admin' },\\r\\n\\t{ name: 'Bob', role: 'editor' },\\r\\n\\t{ name: 'Charlie', role: 'admin' },\\r\\n\\t{ name: 'Bob', role: 'editor' },\\r\\n]\\r\\n\\r\\nconst grouped = new Map()\\r\\n\\r\\nfor (const user of users) {\\r\\n\\tif (!grouped.has(user.role)) {\\r\\n\\t\\tgrouped.set(user.role, new Set())\\r\\n\\t}\\r\\n\\tgrouped.get(user.role).add(user.name)\\r\\n}\\r\\n\\r\\nfor (const [role, names] of grouped) {\\r\\n\\tconsole.log(`${role}:`, [...names])\\r\\n}\\r\\n\\r\\n// admin: ['Alice', 'Charlie']\\r\\n// editor: ['Bob']\\n\"})}),\"\\n\",n(o.hr,{}),\"\\n\",n(o.h2,{children:\"Map vs Set - Quick Reference\"}),\"\\n\",n(o.h2,{children:\"Pro Tips Recap ðŸ’¡\"}),\"\\n\",r(a,{options:[\"npm\",\"yarn\",\"pnpm\",\"bun\"],children:[n(o.pre,{children:n(o.code,{className:\"language-bash\",children:\"npm uninstall vue-clerk\\r\\nnpm install @clerk/vue\\n\"})}),n(o.pre,{children:n(o.code,{className:\"language-bash\",children:\"yarn remove vue-clerk\\r\\nyarn add @clerk/vue\\n\"})}),n(o.pre,{children:n(o.code,{className:\"language-bash\",children:\"pnpm remove vue-clerk\\r\\npnpm add @clerk/vue\\n\"})}),n(o.pre,{children:n(o.code,{className:\"language-bash\",children:\"bun remove vue-clerk\\r\\nbun add @clerk/vue\\n\"})})]})]})}return{default:function(e={}){const{wrapper:r}=e.components||{};return r?n(r,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};",
    "toc": [
      {
        "title": "ðŸ”¸ Part 1: Set - The Unique Value Hero",
        "url": "#-part-1-set---the-unique-value-hero",
        "items": [
          {
            "title": "What is a Set?",
            "url": "#what-is-a-set",
            "items": []
          },
          {
            "title": "Basic Example",
            "url": "#basic-example",
            "items": []
          },
          {
            "title": "ðŸ”¥ Advanced Use Cases for Set",
            "url": "#-advanced-use-cases-for-set",
            "items": [
              {
                "title": "1.1. Remove duplicates from an array",
                "url": "#11-remove-duplicates-from-an-array",
                "items": []
              },
              {
                "title": "1.2. Check for duplicates",
                "url": "#12-check-for-duplicates",
                "items": []
              },
              {
                "title": "1.3. Use Set for managing tags (case-insensitive)",
                "url": "#13-use-set-for-managing-tags-case-insensitive",
                "items": []
              }
            ]
          }
        ]
      },
      {
        "title": "ðŸ”¸ Part 2: Map - The Key-Value Power Tool",
        "url": "#-part-2-map---the-key-value-power-tool",
        "items": [
          {
            "title": "What is a Map?",
            "url": "#what-is-a-map",
            "items": []
          },
          {
            "title": "Basic Example",
            "url": "#basic-example-1",
            "items": []
          },
          {
            "title": "ðŸ”¥ Advanced Use Cases for Map",
            "url": "#-advanced-use-cases-for-map",
            "items": [
              {
                "title": "2.1. Use objects as keys",
                "url": "#21-use-objects-as-keys",
                "items": []
              },
              {
                "title": "2.2. Count item occurrences",
                "url": "#22-count-item-occurrences",
                "items": []
              },
              {
                "title": "2.3. Implement caching with Map",
                "url": "#23-implement-caching-with-map",
                "items": []
              }
            ]
          }
        ]
      },
      {
        "title": "Combine Map + Set: Real-Life Grouping",
        "url": "#combine-map--set-real-life-grouping",
        "items": [
          {
            "title": "Group users by role, with unique names",
            "url": "#group-users-by-role-with-unique-names",
            "items": []
          }
        ]
      },
      {
        "title": "Map vs Set - Quick Reference",
        "url": "#map-vs-set---quick-reference",
        "items": []
      },
      {
        "title": "Pro Tips Recap ðŸ’¡",
        "url": "#pro-tips-recap-",
        "items": []
      }
    ],
    "updatedAt": "7/29/2025, 10:57:03 PM",
    "author": {
      "avatar": "/assets/images/avt/me_04.png",
      "name": "Stephen",
      "github": "https://github.com/Hieu-BuiMinh"
    },
    "slugAsParams": "dev/posts/dev-post"
  }
]